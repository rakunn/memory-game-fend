/*
	reset
*/
* {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
	font-family: 'Lato', sans-serif;
}

*::before,
*::after {
	box-sizing: border-box;
}

/*
	general styles
*/
body {
	background-image: url(../img/congruent_pentagon.png); /* downloaded from www.subtlepatterns.com */
	display: flex;
	flex-direction: column;
	justify-content: space-between;
	align-items: center;
	height: 100vh;
}

header,
footer {
	background-color: #5ea8a7;
	opacity: 0.8;
	width: 100vw;
}

/*
	header styles
*/
header {
	border-radius: 0 0 10px 10px;
}

header h1 {
	color: #fff;
	padding: 0.2em;
	font-weight: 700;
	text-transform: uppercase;
	text-align: center;
}

/*
	Modal styles
*/
.modal {
	background-color: #fff;
	border-radius: 10px;
	display: flex;
	flex-direction: column;
	align-items: center;
	position: absolute;
	padding: 1em;
	left: 50%;
	top: -100%;
	text-align: center;
	-webkit-transform: translate(-50%, -50%);
	        transform: translate(-50%, -50%);
	transition: 0.2s all ease-in;
}

.modal.active {
	z-index: 1;
	-webkit-transform: translate(-50%, -50%);
	        transform: translate(-50%, -50%);
	top: 40%;
}


.modal h2,
.modal h3 {
	color: #257985;
	text-align: center;
	text-transform: uppercase;
}

.modal img {
	border-radius: 5px;
	width: 70vw;
	max-width: 300px;
}

.modal .stats {
	  border: 1px solid #d8d2d2;
    border-radius: 5px;
    margin: 0.5em 0;
    padding: 0.5em 0;
    width: 100%;
}

.modal .restart {
	background-color: #257985;
	box-shadow: none;
	border: none;
	border-radius: 5px;
	color: #fff;
	cursor: pointer;
	margin-top: 0.5em;
	padding: 0.5em;
}

.dimmer {
	display: none;
}

.dimmer.active {
	display: block;
	background-color: #000;
	opacity: 0.1;
	position: fixed;
	top: 0;
	left: 0;
	height: 100vh;
	width: 100vw;
}

/*
	nav and main styles
*/
nav {
	background-color: #fff;
	border-radius: 10px 10px 0 0;
	display: flex;
	justify-content: space-between;
  padding: 0.5em 1em;
}

.rating-widget .fa-star,
.star-stat .fa-star {
	color: #e0e0e0;
}
.rating-widget .fa-star.gold,
.star-stat .fa-star.gold {
	color: #ffed00;
}

nav .restart {
	color: #257985;
	cursor: pointer;
	transition: -webkit-transform 0.1s ease-in;
	transition: transform 0.1s ease-in;
	transition: transform 0.1s ease-in, -webkit-transform 0.1s ease-in;
}

nav .restart:active {
	-webkit-transform: scale(1.1) rotate(360deg);
	        transform: scale(1.1) rotate(360deg);
}

main .time {
	background-color: #fff;
	border-radius: 0 0 10px 10px;
	padding: 0.5em 0;
	text-align: center;
}


/*
	Card and card deck styles
*/

.card-deck,
.card {
	display: flex;
	justify-content: center;
	align-items: center;
}

.card-deck {
	background-color: #fff;
	flex-wrap: wrap;
	max-width: 600px;
	background: #ebfdd4;
}

.card {
	background-color: #5ea8a7;
	border-radius: 10px;
	color: #fff;
	cursor: pointer;
	font-size: 2em;
	margin: 10px;
	width: calc(100vw/4 - 20px);
	height: calc(100vw/4 - 20px);
	max-width: 130px;
	max-height: 130px;
	transition: 0.5s all;
}

.card > svg {
	opacity: 0;
	transition: 0.5s all;
}

.card:hover {
	-webkit-transform: scale(1.05) rotateY(0);
	        transform: scale(1.05) rotateY(0);
}

.card.selected {
	background-color: #257985;
  -webkit-transform: scale(1.05) rotateY(360deg);
          transform: scale(1.05) rotateY(360deg);
}

.card.selected:hover,
.card.correct:hover,
.card.wrong:hover {
	cursor: default;
}

.card.correct {
	-webkit-animation: correct 1s forwards;
	        animation: correct 1s forwards;
	background-color: #5aca84;
}

.card.wrong {
	-webkit-animation: wrong 1s forwards;
	        animation: wrong 1s forwards;
	background-color: #ff4447;
}

.card.selected > svg,
.card.correct > svg,
.card.wrong > svg {
	opacity: 1;
}

@media screen and (min-width: 600px) {
	.card {
		font-size: 3em;
	}
}

/*
	Footer styles
*/
footer {
	border-radius: 10px 10px 0 0;
}

footer p {
	padding: 0.5em 0;
	color: #fff;
	text-align: center;
}

/* card animations */
@-webkit-keyframes correct {
	0% {
    -webkit-transform: scale3d(1, 1, 1);
    transform: scale3d(1, 1, 1);
  }

  10%, 20% {
    -webkit-transform: scale3d(.9, .9, .9) rotate3d(0, 0, 1, -3deg);
    transform: scale3d(.9, .9, .9) rotate3d(0, 0, 1, -3deg);
  }

  30%, 50%, 70%, 90% {
    -webkit-transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);
    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);
  }

  40%, 60%, 80% {
    -webkit-transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);
    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);
  }

  100% {
    -webkit-transform: scale3d(1, 1, 1);
    transform: scale3d(1, 1, 1);
  }
}
@keyframes correct {
	0% {
    -webkit-transform: scale3d(1, 1, 1);
    transform: scale3d(1, 1, 1);
  }

  10%, 20% {
    -webkit-transform: scale3d(.9, .9, .9) rotate3d(0, 0, 1, -3deg);
    transform: scale3d(.9, .9, .9) rotate3d(0, 0, 1, -3deg);
  }

  30%, 50%, 70%, 90% {
    -webkit-transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);
    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);
  }

  40%, 60%, 80% {
    -webkit-transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);
    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);
  }

  100% {
    -webkit-transform: scale3d(1, 1, 1);
    transform: scale3d(1, 1, 1);
  }
}

@-webkit-keyframes wrong {
  10%, 90% {
    -webkit-transform: translate3d(-3px, 0, 0);
            transform: translate3d(-3px, 0, 0);
  }

  20%, 80% {
    -webkit-transform: translate3d(3px, 0, 0);
            transform: translate3d(3px, 0, 0);
  }

  30%, 50%, 70% {
    -webkit-transform: translate3d(-6px, 0, 0);
            transform: translate3d(-6px, 0, 0);
  }

  40%, 60% {
    -webkit-transform: translate3d(6px, 0, 0);
            transform: translate3d(6px, 0, 0);
  }
}

@keyframes wrong {
  10%, 90% {
    -webkit-transform: translate3d(-3px, 0, 0);
            transform: translate3d(-3px, 0, 0);
  }

  20%, 80% {
    -webkit-transform: translate3d(3px, 0, 0);
            transform: translate3d(3px, 0, 0);
  }

  30%, 50%, 70% {
    -webkit-transform: translate3d(-6px, 0, 0);
            transform: translate3d(-6px, 0, 0);
  }

  40%, 60% {
    -webkit-transform: translate3d(6px, 0, 0);
            transform: translate3d(6px, 0, 0);
  }
}